(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[405],{8312:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/",function(){return n(6730)}])},6730:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return E}});var i=n(5893),o=n(1664),r=n.n(o),s=function(e){var t=e.children;return(0,i.jsx)("div",{className:"relative flex flex-col items-center pt-8 m-0 overflow-x-hidden text-center bg-neutral-50 dark:bg-neutral-800 dark:text-neutral-50 shadow-neutral-50",children:(0,i.jsx)("div",{className:"mx-6 space-y-5 min-h-content lg:max-w-screen-lg md:max-w-screen-md md:mx-10",children:t})})},a=function(e){var t=e.data,n=e.className,o=void 0===n?"":n;return(0,i.jsx)("div",{className:"sm:col-span-1 md:col-span-2 lg:col-span-3 ".concat(o),children:t.map((function(e,t){return(0,i.jsx)("p",{className:"pb-2",children:e.items.map((function(e,t){var n,o;if(null===(n=e.options)||void 0===n?void 0:n.bold)return(0,i.jsx)("mark",{children:e.text},t);if(null===(o=e.options)||void 0===o?void 0:o.link){var s=e.options.link;return(0,i.jsx)(r(),{href:s.href,children:(0,i.jsx)("a",{target:"_blank",children:e.text})},t)}return e.text}))},t)}))})},l=function(e){var t=e.children;return(0,i.jsx)("h2",{className:"pb-4 text-3xl font-thin border-neutral-800 border-b-1/2 dark:border-neutral-50",children:t})},c=function(e){var t=e.photos;return t?(0,i.jsxs)("div",{className:"pb-4",children:[(0,i.jsx)("p",{className:"pb-2 text-2xl font-semibold text-left",children:"Photo Gallery"}),(0,i.jsx)("div",{className:"photo-grid",children:t.map((function(e,t){return(0,i.jsx)(r(),{href:"/img/".concat(e.href),children:(0,i.jsx)("div",{className:"cursor-pointer dark:opacity-90 card card-".concat(e.type),style:{backgroundImage:"url('/img/".concat(e.href,"')")}})},t)}))})]}):(0,i.jsx)(i.Fragment,{})},h=function(e){var t=e.data;return t?(0,i.jsx)("div",{className:"video dark:opacity-90",children:(0,i.jsx)("iframe",{src:"https://www.youtube.com/embed/".concat(t.id),allowFullScreen:!0,frameBorder:"0",loading:"lazy",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"})}):(0,i.jsx)(i.Fragment,{})};var d=function(e){e=null!==e?e:function(e){throw e}(new TypeError("Cannot destructure undefined"));return(0,i.jsx)("div",{className:"w-full h-full block",children:(0,i.jsx)("span",{className:"rounded-full block m-auto mb-4 bg-neutral-600",style:{width:"200px",height:"200px",boxShadow:"inset 0 0 20px #636161",backgroundImage:'url("https://gravatar.com/avatar/381510daba793a32d294422fa36c180c?s=200&amp;d=retro")'}})})};function u(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var p=function e(t,n){u(this,e),this.text=t,this.options=null!==n&&void 0!==n?n:{}},m=function e(t){u(this,e),this.items=t},g=function e(t,n,i,o){u(this,e),this.title=t,this.quote=n,this.description=i,this.options=null!==o&&void 0!==o?o:{}},f=[new m([new p("I am a Master's student at "),new p("Purdue University",{bold:!0}),new p(" studying "),new p("Electrical Engineering",{bold:!0}),new p(" with a focus in Computer Architecture. I am intensely curious about ASIC design and embedded system development. I have experience in "),new p("UVM Verification",{bold:!0}),new p(" of a two-stage cache hierarchy as well as microcontroller development across multiple systems including "),new p("ESP32",{bold:!0}),new p(", "),new p("STM32",{bold:!0}),new p(", "),new p("Teensy",{bold:!0}),new p(".")]),new m([new p("I enjoy programming clean and intuitive applications for assisting in engineering projects, solving business problems, and sometimes just for fun! I have worked with many different languages including: "),new p("System Verilog",{bold:!0}),new p(", "),new p("C",{bold:!0}),new p(", "),new p("C++",{bold:!0}),new p(", "),new p("Java",{bold:!0}),new p(", "),new p("JavaFX",{bold:!0}),new p(", "),new p("NodeJS",{bold:!0}),new p(", "),new p("Typescript",{bold:!0}),new p(", "),new p("Python",{bold:!0}),new p(", "),new p("MatLab",{bold:!0}),new p(".")]),new m([new p("To assist in my electrical projects I use many engineering tools such as "),new p("QuestaSim",{bold:!0}),new p(", "),new p("Cadence",{bold:!0}),new p(", "),new p("Design Compiler",{bold:!0}),new p(", "),new p("Git/GitHub",{bold:!0}),new p(", "),new p("KiCAD",{bold:!0}),new p(", "),new p("LTspice",{bold:!0}),new p(".")]),new m([new p("To see my resume, "),new p("click here",{link:{href:"https://marndt26.github.io/Resume/Mitchell-Arndt-Resume.pdf"}})])];var w=function(e){e=null!==e?e:function(e){throw e}(new TypeError("Cannot destructure undefined"));return(0,i.jsxs)("div",{children:[(0,i.jsx)(l,{children:"About Me"}),(0,i.jsxs)("div",{className:"grid py-4 sm:grid-cols-1 md:grid-cols-3 lg:grid-cols-4",children:[(0,i.jsx)(d,{}),(0,i.jsx)(a,{className:"text-justify",data:f})]})]})},y=n(3750),b=function(e){var t=e.link;return t?(0,i.jsx)("div",{className:"flex justify-center pb-1 cursor-pointer",children:(0,i.jsx)(r(),{href:t,children:(0,i.jsxs)("a",{className:"flex items-center justify-center px-2 py-1 font-mono no-underline duration-75 rounded-full shadow-md text-neutral-800 bg-neutral-100 hover:scale-110 w-min",target:"_blank",children:[(0,i.jsx)(y.rFR,{size:"18"}),(0,i.jsx)("p",{className:"pl-1",children:"source"})]})})}):(0,i.jsx)(i.Fragment,{})},x=function(e){var t=e.children,n=e.href;return(0,i.jsx)(r(),{href:n,children:(0,i.jsxs)("a",{className:"relative z-10 flex items-center justify-center w-16 h-16 mx-1 rounded-full group text-neutral-50 dark:text-neutral-800 hover:text-neutral-800 dark:hover:text-neutral-50",target:"_blank",children:[(0,i.jsx)("span",{className:"absolute w-full h-full transition-all duration-300 scale-90 rounded-full shadow-neutral-800 dark:shadow-neutral-50 -z-10 shadow-inner-full group-hover:scale-100 group-hover:shadow-inner-sm",children:""}),t]})})};var v=function(e){e=null!==e?e:function(e){throw e}(new TypeError("Cannot destructure undefined"));var t=[new m([new p("Email: "),new p("MitchAArndt@gmail.com",{link:{href:"mailto:mitchaarndt@gmail.com"}})])];return(0,i.jsxs)("div",{className:"flex flex-wrap justify-center md:justify-between",children:[(0,i.jsxs)("div",{className:"flex flex-col justify-end py-2 text-center md:text-left min-w-fit",children:[(0,i.jsx)("h1",{className:"text-4xl font-semibold",children:"Mitchell Arndt"}),(0,i.jsx)("h2",{className:"text-xl font-light",children:"Purdue Honors Electrical Engineering"})]}),(0,i.jsxs)("div",{children:[(0,i.jsxs)("div",{className:"flex flex-row justify-end py-4",children:[(0,i.jsx)(x,{href:"https://www.facebook.com/mitch.arndt.50",children:(0,i.jsx)(y.k1O,{size:30})}),(0,i.jsx)(x,{href:"https://github.com/MArndt26",children:(0,i.jsx)(y.rFR,{size:30})}),(0,i.jsx)(x,{href:"https://www.instagram.com/mitcharndt/",children:(0,i.jsx)(y.Vs6,{size:28})}),(0,i.jsx)(x,{href:"https://www.linkedin.com/in/mitch-arndt-383968165/",children:(0,i.jsx)(y.NQh,{size:28})}),(0,i.jsx)(x,{href:"https://twitter.com/MitchArndt",children:(0,i.jsx)(y.meP,{size:30})})]}),(0,i.jsx)(a,{className:"text-center md:text-right",data:t})]})]})},j=n(9008),k=n.n(j),T=function(e){var t=e.title,n=void 0===t?"Mitchell Arndt | Purdue Electrical Engineer":t,o=e.description,r=void 0===o?"I am a Master's student at Purdue University studying Electrical Engineering with a focus in Computer Architecture. I am intensely curious about ASIC design and embedded system development.":o,s=e.image,a=void 0===s?"/banner.png":s;return(0,i.jsxs)(k(),{children:[(0,i.jsx)("title",{children:n}),(0,i.jsx)("meta",{name:"twitter:card",content:"summary"}),(0,i.jsx)("meta",{name:"twitter:title",content:n}),(0,i.jsx)("meta",{name:"twitter:description",content:r}),(0,i.jsx)("meta",{name:"twitter:image",content:a}),(0,i.jsx)("meta",{property:"og:title",content:n}),(0,i.jsx)("meta",{property:"og:description",content:r}),(0,i.jsx)("meta",{property:"og:image",content:a}),(0,i.jsx)("link",{rel:"apple-touch-icon",sizes:"180x180",href:"/favicon/apple-touch-icon-180x180.png"}),(0,i.jsx)("link",{rel:"icon",type:"image/png",sizes:"32x32",href:"/favicon/favicon-32x32.png"}),(0,i.jsx)("link",{rel:"icon",type:"image/png",sizes:"16x16",href:"/favicon/favicon-16x16.png"})]})},M=[new g("SMI Core","RTL Design, UVM Verification, and DCNXT Synthesis for SMI Controller",[new m([new p("The Serial Management Interface (SMI) Controller Project walks through the digital workflow from RTL to synthesis.  The design is based on the IEEE 802.3 ethernet standard.  More specifically, it implements Clause 22 direct (IEEE 802.3 section 22.2.4.5), Clause 45 direct (IEEE 802.3 section 45.3), and Clause 22 Access to Clause 45 Registers (explained in detail "),new p("here",{link:{href:"https://www.ieee802.org/3/efm/public/nov02/oam/pannell_oam_1_1102.pdf"}}),new p(").  Further information about the communication protocol can be found "),new p("here",{link:{href:"https://www.totalphase.com/support/articles/200349206-MDIO-Background"}}),new p(".")]),new m([new p("After the RTL implementation, the next stage was to verify the design.  The initial strategy was to use a directed test bench for specific transaction sequences.  To increase the coverage of the input space, UVM was used to conduct constrained, randomized testing of the SMI controller.  The UVM structure contained a serial agent to generate a high level transaction, parse this transaction into mdio packets based on the protocol, and drive the serial channel to the device.")]),new m([new p("The final stage of this project was to synthesize the design.  This was done using the DC NXT synthesis tool.  The design was timing constrained to match the requirements of the production chip from Microchip.")])],{photos:[{href:"microchip/smi_core_syn_top.png",type:"small"},{href:"microchip/smi_fsm.png",type:"tall"},{href:"microchip/smi_uvm_top.png",type:"wide"},{href:"microchip/smi_sch.png",type:"small"},{href:"microchip/smi_waves.png",type:"small"},{href:"microchip/fpga.png",type:"small"}]}),new g("UVM Caches","UVM Verification for Two-Stage Cache Hierarchy of RISCV Processor",[new m([new p("The purpose of the Cache UVM Testbench project was to create a modular, reusable framework of testing components for the memory hierarchy for Purdue SoCET's RISCV Processor core. The main parts of the testbench can be split into the following components: Bus Agent, Bus Scoreboard/Predictor, and End2End Checker. The Bus Agent provides the core interfacing logic to communicate abstract cpu-transactions to the memory hierarchy. This involves reads, writes, and flush operations. The Bus Agent is extended to create a CPU Agent that drives these processor transactions to stress the various features of the RTL design. The Bus Scoreboard and Predictor pair to check the input side of any memory device (L1 cache, L2 cache, memory BFM). The End2End Checker ensures the proper translation of transactions as they propagate throughout the memory hierarchy.")])],{github:"https://github.com/Purdue-SoCET/RISCVBusiness/tree/Caches/verification/uvm/caches",photos:[{href:"socet/L2-Presentation-Top.png",type:"big"},{href:"socet/L2_UVM.png",type:"wide"},{href:"socet/Multicore_UVM.png",type:"wide"}]}),new g("Dual Core Microprocessor Designs","Pipelined Dual Core with Instruction, Data Cache, and Branch Prediction through BTB",[new m([new p("This project is the result of an iterative design laboratory at Purdue University aimed at designing a microprocessor for the MIPS Instruction Set using System Verilog.  The design started with a basic single cycle datapath.  Following this, the datapath was split into Fetch, Decode, Execute, Memory, and Writeback stages for a simplified single core pipelined processor.  From there, the following upgrades where added to the design: Hazard Detection, Forwarding, Memory Arbitration, Caching with a 2 way set associative data cache with LRU replacement and a direct mapped instruction cache, Branch Prediction using a Branch Table Buffer with 2-bit entries.  At this point, the design branched from a single core to a multiprocessor with two identical cores.  The coherency model was based on the MSI protocol with slight alterations such as cache to cache transfer for better memory access times.  Furthermore, the multicore datapath was modified to include atomic Load-Linked and Store-Conditional operations.  Additionally, parallel assembly code was written to test this system against a MIPS simulator against various algorithms such as MergeSort, Fibonacci, Multiplication through repeated Additions, and thread safe acquire/release lock operations.")])],{photos:[{href:"ece437/system.png",type:"big"},{href:"ece437/bus_ctrl_fsm.png",type:"small"},{href:"ece437/datapath.png",type:"small"},{href:"ece437/dcache.png",type:"small"},{href:"ece437/cache_ctrl_fsm.png",type:"small"}]}),new g("Sink or be Sunk Embedded Senior Design Project","A WiFi Connected, electronic twist on the classic Battleship game",[new m([new p("The goal of this project is to create the most engaging and socially distanced version of Battleship, and our team has conceptualized a variety of ways to enhance the game experience while keeping its integrity. The first obstacle is to maintain social distancing. Our team plans to implement a connection between two battery-powered boards via WiFi from the ESP32 and web sockets, allowing for optimal and adjustable distancing. We will use a server to host the code for the gameplay logic, which validates legal plays on both boards. To reinvigorate gameplay, our team will engage with the players through touch, sight, and sound. Players will firmly place or lock-in, their boats on the boards at the beginning of the game and enter coordinates on a key pad to determine the attack location (depending on gameplay selection). For each \u201cattack\u201d, LEDs corresponding to hits or misses will flash on both players\u2019 boards, creating a stronger visual appeal. When a boat is decimated, each setup will vibrate and audibly announce which boat has sunk, which will not only keep players interested but reproduce the incentive to win. Finally, to put a spin on the traditional playing style, we will create a variety of game modes. These different modes will allow players to play casually or competitively, quickly or for longevity. The various play options will further player interest simply by allowing the players to play towards an objective of their choice. To battle it out against your friends, visit the online version of the game "),new p("here",{link:{href:"https://sink-or-be-sunk.herokuapp.com/"}}),new p(".")])],{link:"https://sink-or-be-sunk.github.io/Team_Website",github:"https://github.com/Sink-or-be-Sunk",photos:[{href:"sink-or-be-sunk/Final_ESP32_Render.png",type:"big"},{href:"sink-or-be-sunk/led_rainbow_demo.gif",type:"wide"},{href:"sink-or-be-sunk/AccountPage.png",type:"wide"},{href:"sink-or-be-sunk/grid_demo.gif",type:"wide"},{href:"sink-or-be-sunk/Homepage.png",type:"big"},{href:"sink-or-be-sunk/cadBoat.jpeg",type:"wide"}],video:{id:"ziMwrT-h9pU"}}),new g("Hardware Control with Serial Parsing Microcontroller for Autonomous Racing","Arduino based embedded system for controlling low level electronics of autonomous go kart",[new m([new p("The purpose of this project is to implement a serial parsing microcontroller system to operate the steering, throttle, and braking functionality of the Autonomous Motorsport Purdue (AMP) go-kart. Autonomous racing has grown in popularity as more teams work to solve the unique problem of autonomous decision making at very high speeds. Our sub-team is working with the low-level electrical hardware on our modified go-kart, mainly focusing on parsing data from the onboard computer and distributing signals to other electronics such as the motor controller, linear actuator, and servos. To do this, the microcontroller receives custom serial packets from the go kart's computer to enable and then control the steering angle, throttle intensity, and brake position. The steering angl  is set with a pulse width modulated (PWM) signal from the microcontroller. The throttle is controlled via the digital to analog converter (DAC) and the braking is set via digital signals. To reduce processing time the serial structure was designed to use byte long data instead of floating-point values because the microcontroller does not have dedicated floating-point hardware. Furthermore, we implemented various error handling methods for packet transmission such as cyclic redundancy check. This project is currently in its initial testing phase. We are testing the integration of our subsystems by controlling the serial input using a custom javascript-based simulator. The ultimate goal of this project is to have a fully autonomous go-kart that can navigate any track environment at the maximum speed possible.")])],{link:"https://web.ics.purdue.edu/~elgamala/AMP-VIP",github:"https://github.com/ Autonomous-Motorsports-Purdue/AMP_MCUv1",photos:[{href:"amp/AMP_Group.png",type:"big"},{href:"amp/AMP_Kart.jpg",type:"wide"},{href:"amp/AMP_PCB.png",type:"small"},{href:"amp/AMP_Expo_Certificate.png",type:"small"}],video:{id:"CATtHCXGsZI"}}),new g("High Speed Force Sensor Datalogger","Datalogger for PNG Research using the Teensy 4.1 development board",[new m([new p(' Purdue Neurological Group (PNG) is involved in many different research projects, one of which involves measuring the effects of head trauma in athletes. More specifically, football helmet collisions. The goal of the project in regards to this repository is to design and implement high-speed data collection circuitry to measure the forces that take place  during one of these football impacts (tackles). "Data collection circuitry" refers to the following:'),new p("A microcontroller to read in analog inputs through an ADC"),new p("Variable resistance strain gauges to measure forces"),new p("Analog multiplexers to route 6 different signals into the microcontroller"),new p("Differential amplifier / Wheatstone bridge to convert the sensor resistance changes into changes in voltage."),new p("SD card to record the data My contribution to this effort involves designing and programming the force collecting circuitry.")])],{github:"https://github.com/MArndt26/PNG_Datalogger",photos:[{href:"png/helmet_closeup.jpg",type:"small"},{href:"png/bend_device.jpg",type:"small"},{href:"png/breadboard.jpg",type:"big"},{href:"png/helmet_setup.jpg",type:"big"},{href:"png/strain_gauge_plot.jpg",type:"small"},{href:"png/Data_Processed.jpg",type:"small"}]}),new g("Harmonize","Social media application aimed at connecting individuals with similar musical interests",[new m([new p("In the era of COVID and distance friendships, people need a method of connecting with individuals musically. Even in the absence of COVID, it is difficult to meet people with similar music tastes willing to attend a  concert together. With Harmonize users will be able to easily connect with people and explore their music tastes.  Unlike the vanilla services provided by Spotify, this will allow users to share their personal music style with the world and foster new friendships along the way. Harmonize is a one-stop-shop for online music socialization.")])],{github:"https://github.com/MArndt26/Harmonize",photos:[{href:"harmonize/navbar.png",type:"tall"},{href:"harmonize/user_homepage.png",type:"big"},{href:"harmonize/recommendation_dashboard.png",type:"big"},{href:"harmonize/music_groups_page.png",type:"tall"}]}),new g("AMP Jetson Serial Simulator","Electron based serial simulator for testing serial communication between the Jetson and Arduino MCU",[new m([new p("This Project is used to interface with the microcontroller for the Autonomous Motorsport Purdue go-kart. A key issue for the AMP team is the allocation of resources between the sub-teams.  Due to the tight integration of our systems, both Electrical and Software sub-teams require access to the kart's main computer (Nvidia Jetson) and the electrical controller (Arduino MCU) for development/debugging tasks.  To solve this issue, I created this Jetson Serial Simulator program.  This software takes the place of the Jetson which allows for full electrical integration testing, without the need to schedule time with the physical Jetson computer.")])],{github:"https://github.com/Autonomous-Motorsports-Purdue/AMP-Jetson-Serial-Sim",video:{id:"daYhBjnEbTU"}}),new g("Retro Game Console","Microcontroller Controlled Flappy Bird Game Console",[new m([new p("This project used multiple peripheral systems of a STM32 microcontroller to recreate the infamous flappy bird game. The system shows the main content through an LCD display controlled through SPI communication with the microcontroller. There is also an additional 7 segment display to update the user's score.  Finally, game music (the Tetris Theme Song) is output to the user by passing a variable duty cycle PWM signal through a hardware low pass filter.")])],{github:"https://github.com/MArndt26/MCU_Flappy_Bird",photos:[{href:"flappy/full_board.jpg",type:"big"},{href:"flappy/screen.jpg",type:"tall"},{href:"flappy/score.jpg",type:"small"}],video:{id:"S5TemZ1Fc4k"}}),new g("E3 Auto Adhesive Dispenser","Automated Control System for Display Adhesive Dispenser",[new m([new p("This Project is used to create a control pad and scale to dispense adhesive until a weight limit is reached. E3 Displays uses various manufacturing processes when fabricating the customized display stacks for its customers. One of these processes involves using precise amounts of adhesive for bonding displays to cover glass. In the past, this has been a manual process, requiring operators to spend large amounts of time preparing the adhesive for the bonding process.  This project automates this by bundling all the prep work into one location, controlled electronically.")])],{github:"https://github.com/MArndt26/E3-Auto-Dispenser",photos:[{href:"e3/cart.jpg",type:"tall"},{href:"e3/box_internal.jpg",type:"big"},{href:"e3/pump.jpg",type:"tall"}],video:{id:"TZbIzYgnOPE"}})];var C=function(e){e=null!==e?e:function(e){throw e}(new TypeError("Cannot destructure undefined"));return(0,i.jsxs)("div",{children:[(0,i.jsx)(l,{children:"Projects"}),(0,i.jsx)("div",{children:M.map((function(e,t){return(0,i.jsx)(A,{data:e},t)}))})]})},A=function(e){var t=e.data;return(0,i.jsxs)("div",{className:"py-8",children:[(0,i.jsx)("h3",{className:"pb-1 text-2xl font-semibold text-neutral-700 dark:text-neutral-300",children:t.title}),(0,i.jsx)(b,{link:t.options.github}),t.options.link?(0,i.jsx)("p",{className:"mb-1",children:(0,i.jsx)(r(),{href:t.options.link,children:(0,i.jsx)("a",{className:"text-sm italic font-thin no-underline dark:hover:underline",target:"_blank",children:t.options.link})})}):(0,i.jsx)(i.Fragment,{}),(0,i.jsx)("h4",{className:"pb-4 text-sm italic",children:t.quote}),(0,i.jsx)(a,{className:"text-justify",data:t.description}),(0,i.jsx)(c,{photos:t.options.photos}),(0,i.jsx)(h,{data:t.options.video})]})},P=[{name:"Purdue University",location:"West Lafayette, IN",duration:"August 2021 \u2014 Present",degree:"Master of Science in Electrical Engineering",minors:["Focus in Computer Architecture"],gpa:"3.92"},{name:"Purdue University",location:"West Lafayette, IN",duration:"August 2018 \u2014 December 2021",degree:"Bachelor of Science in Electrical Engineering \u2014 Honors College",minors:["Certificate of Entrepreneurship and Innovation","Minor in Computer Science"],gpa:"3.96"}];var _=function(e){e=null!==e?e:function(e){throw e}(new TypeError("Cannot destructure undefined"));return(0,i.jsxs)("div",{children:[(0,i.jsx)(l,{children:"Education"}),P.map((function(e,t){return(0,i.jsx)(S,{school:e},t)}))]})},S=function(e){var t=e.school;return(0,i.jsxs)("div",{className:"flex flex-wrap justify-center py-4 text-center md:justify-between",children:[(0,i.jsxs)("div",{className:"flex flex-col md:text-left min-w-fit",children:[(0,i.jsx)("h4",{className:"text-3xl font-semibold",children:t.name}),(0,i.jsx)("p",{className:"text-lg font-light",children:t.location}),(0,i.jsx)("p",{className:"",children:t.duration})]}),(0,i.jsxs)("div",{className:"col-span-3 md:text-right",children:[(0,i.jsx)("p",{className:"font-medium",children:t.degree}),t.minors.map((function(e,t){return(0,i.jsx)("p",{className:"text-sm italic",children:e},t)})),(0,i.jsxs)("mark",{children:["GPA: ",t.gpa]})]})]})};function E(e){e=null!==e?e:function(e){throw e}(new TypeError("Cannot destructure undefined"));return(0,i.jsxs)(s,{children:[(0,i.jsx)(T,{}),(0,i.jsx)(v,{}),(0,i.jsx)(w,{}),(0,i.jsx)(C,{}),(0,i.jsx)(_,{}),(0,i.jsx)(N,{})]})}var N=function(){return(0,i.jsx)("div",{className:"pb-4 italic",children:(0,i.jsxs)("p",{children:["View Portfolio Source Code"," ",(0,i.jsx)(r(),{href:"https://github.com/MArndt26/marndt26.github.io",children:(0,i.jsx)("a",{target:"_blank",children:"here"})})]})})}}},function(e){e.O(0,[13,831,774,888,179],(function(){return t=8312,e(e.s=t);var t}));var t=e.O();_N_E=t}]);